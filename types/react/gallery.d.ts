import React from 'react';
import { type IGestureEvent } from '@huangjs888/gesture/react';
import { type IContainer } from './portal';
import { SwiperModel, type ItemModel, type ISPosition, type IDirection } from '../core';
import '../style/gallery.less';
type IGalleryRef = {
    findDOMElement: () => Element | null | undefined;
    getInstance: () => SwiperModel<ItemModel | null> | null | undefined;
};
export type IGalleryProps = {
    style?: React.CSSProperties;
    className?: string;
    backdropStyle?: React.CSSProperties;
    backdropClassName?: string;
    wrapperStyle?: React.CSSProperties;
    wrapperClassName?: string;
    indicatorStyle?: React.CSSProperties;
    indicatorClassName?: string;
    open?: boolean;
    current?: number;
    container?: IContainer;
    destroyOnClose?: boolean;
    enableSwipeClose?: boolean;
    clickPosition?: ISPosition;
    imageUrls?: string[];
    itemGap?: number;
    direction?: IDirection;
    isLazy?: boolean;
    hasLoading?: boolean;
    hasError?: boolean;
    renderError?: () => React.ReactElement | null;
    hasIndicator?: boolean;
    renderLoading?: () => React.ReactElement | null;
    onContextMenu?: (e: IGestureEvent) => void;
    onChange?: (v: number) => void;
    onAfterChange?: (v: number) => void;
    onClose?: (e: IGestureEvent) => void;
    onAfterClose?: () => void;
    onAfterOpenChange?: (o: boolean) => void;
};
declare const _default: React.ForwardRefExoticComponent<IGalleryProps & React.RefAttributes<IGalleryRef>>;
export default _default;
