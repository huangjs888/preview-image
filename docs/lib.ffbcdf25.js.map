{"version":3,"file":"lib.ffbcdf25.js","mappings":"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","sources":["webpack:///../src/util.ts","webpack:///../src/gesture.ts","webpack:///../src/event.ts","webpack:///../src/animation.ts","webpack:///../src/transition.ts","webpack:///../src/matrix.ts","webpack:///../src/transform.ts","webpack:///../src/adjust.ts","webpack:///../src/index.ts"],"sourcesContent":["/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-06-20 10:49:25\n * @Description: ******\n */\n\nexport function fixOption(\n  value: number | undefined,\n  defaultValue: number,\n  minVal: number,\n) {\n  return typeof value !== 'number' || value < minVal ? defaultValue : value;\n}\n\nexport function isTouchable(ele: HTMLElement) {\n  if (!ele) {\n    return false;\n  }\n  return navigator.maxTouchPoints || 'ontouchstart' in ele;\n}\n\nexport function getDistance([x0, y0]: number[], [x1, y1]: number[]) {\n  if (\n    typeof x0 === 'number' &&\n    typeof x1 === 'number' &&\n    typeof y0 === 'number' &&\n    typeof y1 === 'number'\n  ) {\n    return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n  }\n  return 0;\n}\n\nexport function getAngle([x0, y0]: number[], [x1, y1]: number[]) {\n  if (\n    typeof x0 === 'number' &&\n    typeof x1 === 'number' &&\n    typeof y0 === 'number' &&\n    typeof y1 === 'number'\n  ) {\n    return (Math.atan2(y1 - y0, x1 - x0) * 180) / Math.PI;\n  }\n  return 0;\n}\n\nexport function getCenter([x0, y0]: number[], [x1, y1]: number[]) {\n  const ok0 = typeof x0 === 'number' && typeof y0 === 'number';\n  const ok1 = typeof x1 === 'number' && typeof y1 === 'number';\n  return !ok0 && !ok1\n    ? [0, 0]\n    : ok0 && !ok1\n    ? [x0, y0]\n    : !ok0 && ok1\n    ? [x1, y1]\n    : [(x0 + x1) / 2, (y0 + y1) / 2];\n}\n\nexport function getDirection([x0, y0]: number[], [x1, y1]: number[]) {\n  if (\n    typeof x0 === 'number' &&\n    typeof x1 === 'number' &&\n    typeof y0 === 'number' &&\n    typeof y1 === 'number'\n  ) {\n    const x = x0 - x1;\n    const y = y0 - y1;\n    if (x !== y) {\n      return Math.abs(x) >= Math.abs(y)\n        ? x0 - x1 > 0\n          ? 'Left'\n          : 'Right'\n        : y0 - y1 > 0\n        ? 'Up'\n        : 'Down';\n    }\n  }\n  return 'None';\n}\n\nexport function getVelocity(deltaTime: number, distance: number) {\n  if (\n    typeof distance !== 'number' ||\n    distance === 0 ||\n    typeof deltaTime !== 'number' ||\n    deltaTime === 0\n  ) {\n    return 0;\n  }\n  return distance / deltaTime;\n}\n\n//根据数值，与水平夹角，计算x和y的分量值\nexport function getVector(value: number, angle: number) {\n  if (typeof value !== 'number' || typeof angle !== 'number') {\n    return [0, 0];\n  }\n  const rad = (angle * Math.PI) / 180;\n  return [value * Math.cos(rad), value * Math.sin(rad)];\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-06-20 15:39:10\n * @Description: ******\n */\n\nimport EventTarget from './event';\nimport {\n  fixOption,\n  isTouchable,\n  getDirection,\n  getDistance,\n  getAngle,\n  getCenter,\n  getVelocity,\n  getVector,\n} from './util';\n\nconst isCurrentTarget = (target: HTMLElement, currentTarget: HTMLElement) => {\n  let _target: HTMLElement | null = target;\n  while (_target && _target !== currentTarget) {\n    _target = _target.parentNode as HTMLElement;\n  }\n  return !!_target;\n};\n\nfunction touchstarted(this: Gesture, event: TouchEvent) {\n  const _touches = event.touches;\n  if (!_touches) {\n    return;\n  }\n  event.preventDefault();\n  event.stopImmediatePropagation();\n  const newEvent: GEvent = {\n    currentTarget: this.element,\n    sourceEvent: event,\n    timestamp: Date.now(),\n    point: [0, 0],\n    preventDefault: () => event.preventDefault(),\n    stopPropagation: () => event.stopPropagation(),\n    stopImmediatePropagation: () => event.stopImmediatePropagation(),\n  };\n  // 忽略掉注册事件元素之外的手指\n  const touches: Touch[] = Array.prototype.filter.call(event.touches, (t) =>\n    isCurrentTarget(\n      t.target as HTMLElement,\n      event.currentTarget as HTMLElement,\n    ),\n  );\n  // const touches = _touches;\n  // 表示第一次放入手指\n  if (event.changedTouches.length === touches.length) {\n    this._touch0 = null;\n    this._touch1 = null;\n  }\n  // 如果当前事件元素之外的屏幕上有手指，此时在事件元素上放一个手指，touches会包含该手指\n  // 循环保存放在屏幕上的手指，这里只会保存最多两个，忽略超过三个的手指（只对单指和双指情形处理）\n  for (let i = 0, len = touches.length; i < len; ++i) {\n    const t = touches[i];\n    const p = [t.pageX, t.pageY];\n    const touch = [p, p, p, [t.identifier]];\n    if (!this._touch0) {\n      this._touch0 = touch;\n    } else if (!this._touch1 && this._touch0[3][0] !== t.identifier) {\n      this._touch1 = touch;\n    }\n  }\n  // 每次进入时先阻止所有单指事件\n  this._preventTap = true;\n  this._preventSingleTap = true;\n  this._preventDoubleTap = true;\n  this._swipePoints = null;\n  this._rotateAngle = null;\n  if (this._longTapTimer) {\n    clearTimeout(this._longTapTimer);\n    this._longTapTimer = null;\n  }\n  // 双指start\n  if (this._touch1 && this._touch0) {\n    newEvent.point = getCenter(this._touch0[0], this._touch1[0]);\n    this.trigger('gestureStart', newEvent);\n  }\n  // 单指start\n  else if (this._touch0) {\n    newEvent.point = this._touch0[0];\n    this._preventTap = false;\n    // 设置一个长按定时器\n    this._longTapTimer = window.setTimeout(() => {\n      // 当前点击一旦长按超过longTapInterval则触发longTap，则松开后不会再触发所有单指事件\n      this._preventTap = true;\n      this._preventSingleTap = true;\n      this._preventDoubleTap = true;\n      this._longTapTimer = null;\n      if (this._touch0) {\n        newEvent.waitTime = this.longTapInterval;\n        this.trigger('longTap', newEvent);\n      }\n    }, this.longTapInterval);\n    if (\n      this._singleTapTimer &&\n      this._firstPoint &&\n      getDistance(this._firstPoint, this._touch0[0]) < this.doubleTapDistance\n    ) {\n      // 1，只要连续两次点击时间在doubleTapInterval之内，距离在doubleTapDistance内，无论第二次作何操作，都不会触发第一次的singleTap，但第一次的tap会触发\n      // 2，如果满足第一条时，第二次的点击有多根手指，或者长按触发longTap，则不会再触发doubleTap，第二次的tap，singleTap也不会触发\n      clearTimeout(this._singleTapTimer);\n      this._singleTapTimer = null;\n      this._preventSingleTap = true;\n      this._preventDoubleTap = false;\n      newEvent.point = this._firstPoint;\n    } else {\n      this._firstPoint = this._touch0[0];\n      // 表示是第一次点击或该次点击距离上一次点击时间超过doubleTapInterval，距离超过doubleTapDistance\n      this._preventSingleTap = false;\n      this._preventDoubleTap = true;\n    }\n  }\n  // 无指没有start\n  else {\n    return;\n  }\n  this.trigger('touchStart', newEvent);\n}\n\nfunction touchmoved(this: Gesture, event: TouchEvent) {\n  const touches = event.changedTouches;\n  if (!touches) {\n    return;\n  }\n  event.preventDefault();\n  event.stopImmediatePropagation();\n  const newEvent: GEvent = {\n    currentTarget: this.element,\n    sourceEvent: event,\n    timestamp: Date.now(),\n    point: [0, 0],\n    preventDefault: () => event.preventDefault(),\n    stopPropagation: () => event.stopPropagation(),\n    stopImmediatePropagation: () => event.stopImmediatePropagation(),\n  };\n  // 循环更新手指\n  for (let i = 0, len = touches.length; i < len; ++i) {\n    const t = touches[i];\n    const p = [t.pageX, t.pageY];\n    if (this._touch0 && this._touch0[3][0] === t.identifier) {\n      this._touch0[1] = this._touch0[2];\n      this._touch0[2] = p;\n    } else if (this._touch1 && this._touch1[3][0] === t.identifier) {\n      this._touch1[1] = this._touch1[2];\n      this._touch1[2] = p;\n    }\n  }\n  // 手指移动至少要有一个手指移动超过touchMoveDistance才会触发移动事件\n  if (\n    (this._touch0 &&\n      getDistance(this._touch0[0], this._touch0[2]) > this.touchMoveDistance) ||\n    (this._touch1 &&\n      getDistance(this._touch1[0], this._touch1[2]) > this.touchMoveDistance)\n  ) {\n    // 一旦移动，则阻止所有单指点击相关事件（除了swipe）\n    this._preventTap = true;\n    this._preventSingleTap = true;\n    this._preventDoubleTap = true;\n    if (this._longTapTimer) {\n      clearTimeout(this._longTapTimer);\n      this._longTapTimer = null;\n    }\n    // 双指移动情况\n    if (this._touch1 && this._touch0) {\n      // 双指平移\n      const eCenter = getCenter(this._touch0[2], this._touch1[2]);\n      const mCenter = getCenter(this._touch0[1], this._touch1[1]);\n      const sCenter = getCenter(this._touch0[0], this._touch1[0]);\n      newEvent.point = eCenter;\n      newEvent.direction = getDirection(mCenter, eCenter);\n      newEvent.moveDirection = getDirection(sCenter, eCenter);\n      newEvent.deltaX = eCenter[0] - mCenter[0];\n      newEvent.moveX = eCenter[0] - sCenter[0];\n      newEvent.deltaY = eCenter[1] - mCenter[1];\n      newEvent.moveY = eCenter[1] - sCenter[1];\n      // 只有双指滑动时才会触发下面事件\n      const eDistance = getDistance(this._touch0[2], this._touch1[2]);\n      const mDistance = getDistance(this._touch0[1], this._touch1[1]);\n      const sDistance = getDistance(this._touch0[0], this._touch1[0]);\n      if (sDistance > 0 && eDistance > 0 && mDistance > 0) {\n        // 双指缩放\n        newEvent.scale = eDistance / mDistance;\n        newEvent.moveScale = eDistance / sDistance;\n      }\n      const eAngle = getAngle(this._touch0[2], this._touch1[2]);\n      const mAngle = getAngle(this._touch0[1], this._touch1[1]);\n      // const sAngle = getAngle(this._touch0[0], this._touch1[0]);\n      // 这里计算的三个angle均是向量（第一个参数为起点，第二个为终点）与x正半轴之间的夹角\n      // 方向朝向y轴正半轴的为正值[0,180]，朝向y轴负半轴的为负值[-180,0]\n      // 注意，这里坐标轴是页面坐标，x轴向右正方向，y轴向下正方向，原点在左上角\n      let angle = eAngle - mAngle;\n      if (angle < -180) {\n        // 此种情况属于顺时针转动时mAngle突然由正变为负值（比如由178度顺时针旋转4度都-178度）\n        // 这种情况，因为eAngle和mAngle是两次相邻的移动事件，间隔角度很小（4度）而不会是很大的（-356度）\n        angle += 360;\n      } else if (angle > 180) {\n        // 和上面相反逆时针转动（比如由-178逆时针旋转4度到178）\n        angle -= 360;\n      }\n      // 双指旋转本次和上一次的角度，正值顺时针，负值逆时针\n      newEvent.angle = angle;\n      // 双指旋转起点到终点的总旋转角度，正值顺时针，负值逆时针\n      // 这里不能直接使用eAngle-sAngle，否则顺逆时针分不清，需要通过angle累加\n      const moveAngle = (this._rotateAngle || 0) + angle;\n      newEvent.moveAngle = this._rotateAngle = moveAngle;\n      this.trigger('rotate', newEvent);\n      if (sDistance > 0 && eDistance > 0 && mDistance > 0) {\n        this.trigger('pinch', newEvent);\n      }\n      this.trigger('multiPan', newEvent);\n      this.trigger('gestureMove', newEvent);\n    }\n    // 单指移动\n    else if (this._touch0) {\n      const _timestamp = Date.now();\n      // 第一次移动this._swipePoints为null\n      const _swipePoints = this._swipePoints || [[], []];\n      const _duration =\n        _timestamp -\n        ((_swipePoints[1][0] ? _swipePoints[1][0].timestamp : 0) || 0);\n      // 当前时间与本阶段初始时间之差大于计入swipe的时间(swipeDuration)，则本阶段过时，下阶段开启\n      if (_duration > this.swipeDuration) {\n        // 将本阶段作为上一阶段，开启下一阶段作为本阶段\n        _swipePoints[0] = _swipePoints[1];\n        _swipePoints[1] = [];\n      }\n      // 将当前移动点和时间存入本阶段\n      _swipePoints[1].push({\n        point: this._touch0[2],\n        timestamp: _timestamp,\n      });\n      this._swipePoints = _swipePoints;\n      newEvent.point = this._touch0[2];\n      newEvent.direction = getDirection(this._touch0[1], this._touch0[2]);\n      newEvent.moveDirection = getDirection(this._touch0[0], this._touch0[2]);\n      newEvent.deltaX = this._touch0[2][0] - this._touch0[1][0];\n      newEvent.moveX = this._touch0[2][0] - this._touch0[0][0];\n      newEvent.deltaY = this._touch0[2][1] - this._touch0[1][1];\n      newEvent.moveY = this._touch0[2][1] - this._touch0[0][1];\n      // 触发单指平移事件\n      this.trigger('pan', newEvent);\n    }\n    // 无指无移动\n    else {\n      return;\n    }\n    this.trigger('touchMove', newEvent);\n  }\n}\n\nfunction touchended(this: Gesture, event: TouchEvent) {\n  const touches = event.changedTouches;\n  if (!touches) {\n    return;\n  }\n  event.stopImmediatePropagation();\n  const newEvent: GEvent = {\n    currentTarget: this.element,\n    sourceEvent: event,\n    timestamp: Date.now(),\n    point: [0, 0],\n    preventDefault: () => event.preventDefault(),\n    stopPropagation: () => event.stopPropagation(),\n    stopImmediatePropagation: () => event.stopImmediatePropagation(),\n  };\n  // 临时保存当前手指\n  let touch0: number[][] | null = null;\n  let touch1: number[][] | null = null;\n  // 循环删除已经拿开的手指\n  for (let i = 0, len = touches.length; i < len; ++i) {\n    const t = touches[i];\n    if (this._touch0 && this._touch0[3][0] === t.identifier) {\n      touch0 = this._touch0;\n      this._touch0 = null;\n    } else if (this._touch1 && this._touch1[3][0] === t.identifier) {\n      touch1 = this._touch1;\n      this._touch1 = null;\n    }\n  }\n  // 双指变单指\n  if (this._touch1 && !this._touch0) {\n    this._touch0 = this._touch1;\n    this._touch1 = null;\n    touch1 = touch0;\n    touch0 = null;\n  }\n  // 松开时清除longTapTimer（一旦松开就不存在长按，当然有可能已经发生过了）\n  if (this._longTapTimer) {\n    clearTimeout(this._longTapTimer);\n    this._longTapTimer = null;\n  }\n  // 仍然存在至少一根手指\n  if (this._touch0) {\n    newEvent.point = getCenter(\n      this._touch0[2],\n      this._touch1 ? this._touch1[2] : touch1 ? touch1[2] : [],\n    );\n    this.trigger('gestureEnd', newEvent);\n  }\n  // 全部拿开（双指同时抬起，最后一指抬起，仅仅一指抬起）\n  else if (touch0) {\n    newEvent.point = touch1 ? getCenter(touch0[2], touch1[2]) : touch0[2];\n    if (!this._preventTap) {\n      this.trigger('tap', newEvent);\n    }\n    if (!this._preventSingleTap) {\n      // 等待doubleTapInterval，如果时间内没有点击第二次，则触发\n      this._singleTapTimer = window.setTimeout(() => {\n        this._singleTapTimer = null;\n        newEvent.delayTime = this.doubleTapInterval;\n        this.trigger('singleTap', newEvent);\n      }, this.doubleTapInterval);\n    }\n    if (!this._preventDoubleTap) {\n      // 双击点使用第一次的点\n      if (this._firstPoint) {\n        newEvent.point = this._firstPoint;\n      }\n      newEvent.intervalTime = this.doubleTapInterval;\n      this.trigger('doubleTap', newEvent);\n    }\n    // this._swipePoints存在表示开始了swipe行为\n    if (this._swipePoints) {\n      const [prev, next] = this._swipePoints;\n      // 最后一次移动的点即为swipe终点\n      const endPos = next[next.length - 1];\n      // 最后一次移动点的时间减去手指抬起的时间，此间隔时间需小于等待时间raiseDuration，否则视为停止swipe\n      if (Date.now() - endPos.timestamp <= this.raiseDuration) {\n        // 找到计入swipe的时间(swipeDuration)内的swipe起点\n        let startPos = next[0];\n        for (let i = prev.length - 1; i >= 0; i--) {\n          if (endPos.timestamp - prev[i].timestamp <= this.swipeDuration) {\n            startPos = prev[i];\n          } else {\n            break;\n          }\n        }\n        // 根据swipe起点和终点的距离差与时间差算出swipe抬起时速率\n        const velocity = getVelocity(\n          endPos.timestamp - startPos.timestamp,\n          getDistance(startPos.point, endPos.point),\n        );\n        // swipe速率需要大于swipeVelocity，否则忽略不计，不视为swipe\n        if (velocity > this.swipeVelocity) {\n          // 滑动方向与x夹角\n          const angle = getAngle(startPos.point, endPos.point);\n          // 惯性的方向\n          newEvent.direction = getDirection(startPos.point, endPos.point);\n          newEvent.angle = angle;\n          newEvent.velocity = velocity;\n          // 给出按照velocity速度滑动，当速度减到0时的计算函数：\n          // 当给出时间t，即在t时间内速度减到0，求出滑动的距离：\n          // 当给出减速度a，即在减速度a的作用下，速度减到0，求出滑动的距离，和消耗的时间：\n          // 减速度某个时间的位移：s = v0 * t - (a * t * t) / 2\n          // 减速度某个时间的速度：v = v0 - a * t\n          // s为滑动距离，v末速度为0，v0初速度为velocity\n          newEvent.swipeComputed = (\n            factor: number,\n            _velocity: number = velocity,\n          ) => {\n            // 因子大于1可以认为传入的是时间毫秒数\n            let duration = 0;\n            let deceleration = 0;\n            let distance = 0;\n            if (factor > 1) {\n              duration = factor;\n              deceleration = _velocity / duration;\n              distance = (_velocity * duration) / 2;\n            }\n            // 因子小于1可以认为传入的是减速度（减速如果大于1一般太大了，不符合使用场景）\n            else if (factor > 0) {\n              deceleration = factor;\n              duration = _velocity / deceleration;\n              distance = (_velocity * _velocity) / (2 * deceleration);\n            }\n            const [stretchX, stretchY] = getVector(distance, angle);\n            return {\n              duration, // swipe速率减到0花费的时间\n              stretchX, // x方向swipe惯性距离（抬起后，继续移动的距离）\n              stretchY, // y方向swipe惯性距离（抬起后，继续移动的距离）\n              deceleration, // swipe速率减到0的减速度\n            };\n          };\n          this.trigger('swipe', newEvent);\n        }\n      }\n    }\n  }\n  this.trigger('touchEnd', newEvent);\n  // 只剩下一根在上面了\n  if (this._touch0 && !this._touch1) {\n    // 双指抬起，只剩下一指，此时就认为该点是移动的起点（否则会把双指移动的起点作为起点，移动时会出现跳跃）\n    this._touch0[0] = this._touch0[1] = this._touch0[2];\n    // 同时可以触发一次start事件\n    newEvent.point = this._touch0[0];\n    this.trigger('touchStart', newEvent);\n  }\n}\n\nfunction touchcanceled(this: Gesture, event: TouchEvent) {\n  this.trigger('touchCancel', {\n    currentTarget: this.element,\n    point: [],\n    timestamp: Date.now(),\n    sourceEvent: event,\n    preventDefault: () => event.preventDefault(),\n    stopPropagation: () => event.stopPropagation(),\n    stopImmediatePropagation: () => event.stopImmediatePropagation(),\n  });\n  touchended.apply(this, [event]);\n}\n\nfunction scrollcanceled(this: Gesture) {\n  if (this._singleTapTimer) {\n    clearTimeout(this._singleTapTimer);\n    this._singleTapTimer = null;\n  }\n  if (this._longTapTimer) {\n    clearTimeout(this._longTapTimer);\n    this._longTapTimer = null;\n  }\n  this._firstPoint = null;\n  this._touch0 = null;\n  this._touch1 = null;\n  this._preventTap = true;\n  this._swipePoints = null;\n  this._preventSingleTap = true;\n  this._preventDoubleTap = true;\n  this._rotateAngle = null;\n}\n\nclass Gesture extends EventTarget<GType, GEvent> {\n  element: HTMLElement;\n  longTapInterval: number;\n  doubleTapInterval: number;\n  doubleTapDistance: number;\n  touchMoveDistance: number;\n  swipeVelocity: number;\n  swipeDuration: number;\n  raiseDuration: number;\n  _rotateAngle: number | null = null;\n  _singleTapTimer: number | null = null;\n  _longTapTimer: number | null = null;\n  _preventTap: boolean = true;\n  _swipePoints: any[] | null = null;\n  _preventSingleTap: boolean = true;\n  _preventDoubleTap: boolean = true;\n  _firstPoint: number[] | null = null;\n  _touch0: number[][] | null = null; // 保存第一个触摸点x,y值: [startPoint, prevMovePoint, MovePoint, identifier]\n  _touch1: number[][] | null = null; // 保存第二个触摸点x,y值: [startPoint, prevMovePoint, MovePoint, identifier]\n  _destory: (() => void) | null = null;\n  constructor(element: HTMLElement | string, options?: GOptions) {\n    super();\n    let tempElement: HTMLElement | null;\n    if (typeof element === 'string') {\n      tempElement = document.querySelector(element);\n    } else {\n      tempElement = element;\n    }\n    if (!tempElement || !(tempElement instanceof HTMLElement)) {\n      throw new Error('Please pass in a valid element...');\n    }\n    this.element = tempElement;\n    const {\n      longTapInterval,\n      doubleTapInterval,\n      doubleTapDistance,\n      touchMoveDistance,\n      swipeVelocity,\n      swipeDuration,\n      raiseDuration,\n    } = options || {};\n    this.longTapInterval = fixOption(longTapInterval, 750, 500);\n    this.doubleTapInterval = fixOption(doubleTapInterval, 250, 200);\n    this.doubleTapDistance = fixOption(doubleTapDistance, 30, 1);\n    this.touchMoveDistance = fixOption(touchMoveDistance, 3, 0);\n    this.swipeVelocity = fixOption(swipeVelocity, 0.3, 0);\n    this.swipeDuration = fixOption(swipeDuration, 100, 1);\n    this.raiseDuration = fixOption(raiseDuration, 100, 1);\n    // 注册触摸事件\n    if (isTouchable(this.element)) {\n      const started = touchstarted.bind(this);\n      const moved = touchmoved.bind(this);\n      const ended = touchended.bind(this);\n      const canceled = touchcanceled.bind(this);\n      this.element.addEventListener('touchstart', started, false);\n      this.element.addEventListener('touchmove', moved, false);\n      this.element.addEventListener('touchend', ended, false);\n      this.element.addEventListener('touchcancel', canceled, false);\n      const scrolled = scrollcanceled.bind(this);\n      window.addEventListener('scroll', scrolled);\n      this._destory = () => {\n        this.element.removeEventListener('touchstart', started);\n        this.element.removeEventListener('touchmove', moved);\n        this.element.removeEventListener('touchend', ended);\n        this.element.removeEventListener('touchcancel', canceled);\n        window.removeEventListener('scroll', scrolled);\n      };\n    }\n  }\n  done() {\n    return !!this._destory;\n  }\n  destory() {\n    // 解除所有事件\n    super.off();\n    scrollcanceled.apply(this);\n    // 解除手势事件\n    if (this._destory) {\n      this._destory();\n      this._destory = null;\n    }\n  }\n}\n\nexport type GType =\n  | 'pan' // 单指平移\n  | 'tap' // 单指轻点（快，双击时会触发）\n  | 'swipe' // 单指快速滑动\n  | 'singleTap' // 单指点击（有延迟，双击时不触发）\n  | 'longTap' // 单指长按\n  | 'doubleTap' // 单指双击\n  | 'multiPan' // 双指平移\n  | 'pinch' // 双指拿捏\n  | 'rotate' // 双指旋转\n  | 'touchStart' // 触摸开始\n  | 'touchMove' // 触摸移动\n  | 'touchEnd' // 触摸抬起\n  | 'touchCancel' // 触摸取消\n  | 'gestureStart' // 双（多）指开始\n  | 'gestureMove' // 双（多）指移动\n  | 'gestureEnd'; // 双（多）指结束\n\n/**\n * swipe思路:\n * 根据移动停止前swipeDuration时间内移动的距离和时间算出速度，\n * 速度大于swipeVelocity，并且移动停止后到手指抬起时间间隔小于raiseDuration即为swipe\n * 移动停止就是最后一次触发move事件\n * 0. touchstart 清空_swipePoints\n * 1. touchmove 每swipeDuration时间内所移动的点分为一组，只保留上一次swipeDuration时间组和这一次swipeDuration时间组，存储在_swipePoints内\n * 2. touchend 松开手时, 在_swipePoints内找到起终点，根据起终点距离和时间差算出速度，然后算出其他值\n */\n\nexport type GEvent = {\n  currentTarget: HTMLElement;\n  sourceEvent: TouchEvent;\n  timestamp: number;\n  point: number[]; // 当前事件变化的点，如果多个点（两个），取中心点\n  scale?: number; // 移动的缩放比例（和上一个点比较）\n  angle?: number; // 移动的旋转角度（和上一个点比较）swipe角度\n  deltaX?: number; // x方向移动的距离（和上一个点比较）\n  deltaY?: number; // y方向移动的距离（和上一个点比较）\n  direction?: string; // 移动时的方向（和上一个点比较）swipe方向\n  moveScale?: number; // 移动的缩放比例（和起点比较）\n  moveAngle?: number; // 移动的旋转角度（和起点比较）\n  moveX?: number; // x方向移动的距离（和起点比较）\n  moveY?: number; // y方向移动的距离（和起点比较）\n  moveDirection?: string; // 移动时的方向（和起点比较）\n  velocity?: number; // swipe阶段速率（不是从起点到终点的速率）\n  waitTime?: number; // 长按等待时间\n  delayTime?: number; // 点击延迟时间\n  intervalTime?: number; // 双击间隔时间\n  swipeComputed?: (\n    factor: number,\n    _velocity?: number,\n  ) => {\n    duration: number; // swipe速率减到0花费的时间\n    stretchX: number; // x方向swipe惯性距离（抬起后，继续移动的距离）\n    stretchY: number; // y方向swipe惯性距离（抬起后，继续移动的距离）\n    deceleration: number; // swipe速率减到0的减速度\n  };\n  preventDefault: () => void;\n  stopPropagation: () => void;\n  stopImmediatePropagation: () => void;\n};\n\nexport type GOptions = {\n  longTapInterval?: number; // 设置长按等待时间阈值，单位ms\n  doubleTapInterval?: number; // 设置双击时间间隔，单位ms\n  doubleTapDistance?: number; // 双击两次点击的位置距离触发阈值\n  touchMoveDistance?: number; // 移动阈值，超过这个值才算移动\n  swipeVelocity?: number; // swipe阶段的速率大于这个值才会触发swipe\n  swipeDuration?: number; // 移动过程中计入swipe的时间范围，即：最后一次移动事件向前推swipeDuration时间内，作为swipe阶段\n  raiseDuration?: number; // 最后一次移动到手指抬起的时间间隔，小于这个值才会触发swipe\n};\n\nexport default Gesture;\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-05-09 14:46:25\n * @Description: ******\n */\n\ntype IHandler<E, T> = (event: E, type?: T) => boolean | void;\n\nexport default class EventTarget<T extends string, E> {\n  events: {\n    [key in T]?: {\n      pool: Array<IHandler<E, T>>;\n      single: number;\n    };\n  } = {};\n  constructor() {\n    this.events = {};\n  }\n  one(type: T, handler: IHandler<E, T>, single?: boolean) {\n    const onceHandler =\n      typeof handler === 'function'\n        ? (...args: [E, T?]) => {\n            // 该事件只执行一次，执行完就解除事件\n            handler.apply(null, args);\n            this.off(type, onceHandler, single);\n          }\n        : handler;\n    this.on(type, onceHandler, single);\n  }\n  on(type: T, handler: IHandler<E, T>, single?: boolean) {\n    const events = this.events[type] || {\n      pool: [],\n      single: -1,\n    };\n    if (typeof handler === 'function') {\n      if (single) {\n        // 该事件只能注册一次，每次注册都会替换上次注册的，类似于dom属性事件赋值注册比如element.onclick = ()=>{}\n        if (events.single === -1) {\n          // 记录该单独事件在所有事件的位置\n          events.single = events.pool.push(handler) - 1;\n        } else {\n          events.pool[events.single] = handler;\n        }\n      } else {\n        // 该事件可以注册多次，执行时，会遍历全部事件全部执行，类似于dom的addEventListener\n        // 注册进去之前会检查是否有相同的处理程序，如果有，则不再添加（独立程序不参与）\n        let unregistered = true;\n        for (let i = 0, len = events.pool.length; i < len; i++) {\n          if (events.pool[i] === handler && i !== events.single) {\n            unregistered = false;\n            break;\n          }\n        }\n        if (unregistered) {\n          events.pool.push(handler);\n        }\n      }\n    } else if (single && events.single !== -1) {\n      // 需要把独立事件删除，相当于解绑独立事件\n      events.pool.splice(events.single, 1);\n      events.single = -1;\n    }\n    this.events[type] = events;\n  }\n  off(type?: T, handler?: IHandler<E, T>, single?: boolean) {\n    if (typeof type === 'undefined') {\n      // 没有type则删除全部事件\n      this.events = {};\n    } else if (typeof handler === 'undefined') {\n      // 删除type下的所有事件\n      delete this.events[type];\n    } else if (single) {\n      const events = this.events[type];\n      if (events && events.single !== -1) {\n        // 删除独立程序事件\n        events.pool.splice(events.single, 1);\n        events.single = -1;\n      }\n    } else {\n      const events = this.events[type];\n      if (events) {\n        // 检查并删除事件池内事件\n        for (let i = events.pool.length - 1; i >= 0; i--) {\n          if (events.pool[i] === handler && i !== events.single) {\n            events.pool.splice(i, 1);\n            // 因为相同事件只会有一个，所以删除后不需要再检查了\n            break;\n          }\n        }\n      }\n    }\n  }\n  trigger(type: T, event: E) {\n    const events = this.events[type];\n    if (events) {\n      // 循环执行事件池里的事件\n      for (let i = 0, len = events.pool.length; i < len; i++) {\n        const handler = events.pool[i];\n        if (typeof handler === 'function') {\n          const immediatePropagation = handler.apply(null, [event, type]);\n          // 返回值为false，则阻止后于该事件注册的同类型事件触发\n          if (immediatePropagation === false) {\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-06-21 12:28:44\n * @Description: ******\n */\n\nconst requestAnimationFrame =\n  window.requestAnimationFrame ||\n  (function () {\n    let last = 0;\n    // setTimeout时间并不精确，这里做了校准\n    return function (fn: () => void) {\n      const now = Date.now();\n      const delay = Math.max(0, 16 - (now - last));\n      last = now + delay;\n      return window.setTimeout(fn, delay);\n    };\n  })();\n\nconst cancelAnimationFrame =\n  window.cancelAnimationFrame ||\n  function (id: number) {\n    return window.clearTimeout(id);\n  };\n\nconst callDelay = (callback: (elapsed?: number) => void, delay: number) => {\n  if (delay > 0) {\n    window.setTimeout(callback, delay);\n  } else {\n    callback(Math.abs(delay));\n  }\n};\n\nclass Animation {\n  duration: number; // 动画执行持续时间\n  easing: AIEasing; // 动画执行时变换函数\n  delay: number; // 动画延迟多久执行\n  _frameId: number = 0; // 当前正在执行帧的id\n  _sleepId: number = 0; // 当前正在休眠计时id\n  _elapsed: number = 0; // 本次动画已经消耗的时间\n  _tick: ((t: number) => void) | null = null; // 每一帧动画执行函数\n  constructor({ duration, easing, delay }: AIOptions) {\n    this.duration =\n      typeof duration !== 'number' || duration <= 0 ? 0 : duration;\n    this.easing = typeof easing !== 'function' ? (v) => v : easing;\n    this.delay = typeof delay !== 'number' ? 0 : delay;\n  }\n  start(frameFn: (v: number) => void) {\n    // 只有全新的开始才会运行\n    if (this._frameId === 0 && this._elapsed === 0) {\n      const { duration, easing, delay } = this;\n      if (duration > 0) {\n        const tick = (last: number) => {\n          // 本帧时间戳，last：上一帧时间戳\n          const now = Date.now();\n          // 累计已经耗用的时间\n          this._elapsed += now - last;\n          if (this._elapsed < duration) {\n            // 开启下一帧\n            this._frameId = requestAnimationFrame(() => tick(now));\n            // 每一帧的进度\n            frameFn(easing(this._elapsed / duration));\n          } else {\n            frameFn(1);\n            // 执行完毕后清除\n            this._tick = null;\n            this._frameId = 0;\n            this._elapsed = 0;\n          }\n        };\n        this._tick = tick;\n        // 执行第一帧\n        callDelay((elapsed = 0) => {\n          // 第一次直接用掉这些时间\n          this._elapsed = elapsed;\n          tick(Date.now());\n        }, delay);\n      } else {\n        callDelay(() => {\n          frameFn(1);\n        }, delay);\n      }\n    }\n  }\n  restart() {\n    // restart之前先停止运行\n    this.stop();\n    // 停止后启动帧，只有动画已经开始并且未结束才可以\n    if (this._elapsed < this.duration && this._tick) {\n      // 启动帧\n      this._tick(Date.now());\n    }\n  }\n  sleep(time: number) {\n    // 这里注意，如果动画先停止，再点休眠，时间一到会再重启动画，相当于delay一下再restart\n    if (typeof time !== 'number' || time <= 0) {\n      return;\n    }\n    // sleep之前先停止运行\n    this.stop();\n    // 停止后启动休眠，只有动画已经开始并且未结束才可以\n    if (this._elapsed < this.duration && this._tick) {\n      this._sleepId = window.setTimeout(() => {\n        // 到时间后重启动画\n        this.restart();\n      }, time);\n    }\n  }\n  stop() {\n    // 如果在sleep，要先清除sleep\n    window.clearTimeout(this._sleepId);\n    // 清掉还未运行的帧\n    cancelAnimationFrame(this._frameId);\n    this._frameId = 0;\n  }\n  end() {\n    // end之前先停止运行\n    this.stop();\n    // 停止后直接运行最后一帧结束动画，只有动画已经开始并且未结束才可以\n    if (this._elapsed < this.duration && this._tick) {\n      this._elapsed = this.duration;\n      this._tick(Date.now());\n    }\n  }\n}\n\nexport type AIEasing = (v: number) => number;\n\nexport type AIOptions = {\n  duration?: number; // 动画持续时间\n  easing?: AIEasing; // 动画变换函数\n  delay?: number; // 动画延迟多久执行，负数的话，会在第一次把这个时间内的变化一次性用掉，具体看css3-transition-delay\n};\n\nexport default Animation;\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-06-21 13:23:30\n * @Description: ******\n */\n\nimport Animation, { type AIOptions } from './animation';\n\ninterface TIValue {\n  [key: string]: number;\n}\nexport type TAIOptions = AIOptions & {\n  cancel?: boolean; // 该过渡过程是否可以取消\n  precision?: TIValue; // 传入精度，如果变化值小于这个精度，就不再动画，直接赋值\n  transition?: (v: TIValue) => void; // 过渡时每一帧的事件函数\n};\n\nexport abstract class TAProperty {\n  value: TIValue; // 过渡需要变化的值\n  constructor(value: TIValue) {\n    this.value = value;\n  }\n  abstract toString(): string; // 要实现该值转变为style的字符串方法\n}\nexport type TIOptions = {\n  element: HTMLElement; // 过渡应用的元素\n  propertyName: string; // 当前将要过渡的动画应用在元素的哪个属性上\n  propertyValue: TAProperty; // 当前将要过渡的动画属性的实时值\n};\n\nexport default class Transition {\n  element: HTMLElement; // 过渡的元素\n  propertyName: string; // 当前将要过渡的动画应用在元素的哪个属性上\n  propertyValue: TAProperty; // 当前将要过渡的动画属性的实时值\n  _animation: {\n    animation: Animation; // 当前正在执行的过渡动画\n    remainValue: TIValue; // 该过渡动画被取消后剩余未执行的值\n    cancel: boolean; // 该过渡动画是否可以停止\n  }[] = []; // 该属性执行所有过渡的动画集合\n  constructor({ element, propertyName, propertyValue }: TIOptions) {\n    this.element = element;\n    // 将驼峰转换为连字符-，style.setProperty只支持连字符-，不支持驼峰（不生效）\n    this.propertyName = propertyName.replace(/([A-Z])/g, '-$1').toLowerCase();\n    this.element.style.setProperty(this.propertyName, propertyValue.toString());\n    this.propertyValue = propertyValue;\n  }\n  bind(value: TIValue) {\n    // 这里直接做一次校准\n    const { element, propertyName, propertyValue } = this;\n    const newValue: TIValue = {};\n    Object.keys(value).forEach((key) => {\n      const val = value[key];\n      if (typeof val === 'number') {\n        newValue[key] = val;\n      }\n    });\n    propertyValue.value = newValue;\n    element.style.setProperty(propertyName, propertyValue.toString());\n  }\n  apply(deltaValue: TIValue, options: TAIOptions) {\n    return new Promise<TIValue>((resolve) => {\n      const {\n        precision = {},\n        transition = () => {},\n        cancel = true,\n        ...restOptions\n      } = options;\n      const { element, propertyName, propertyValue } = this;\n      const produced: TIValue = {};\n      // 做一次精度筛选\n      Object.keys(deltaValue).forEach((key) => {\n        const val = deltaValue[key];\n        if (typeof val === 'number') {\n          // 大于精度的先存起来，后面启用动画\n          if (Math.abs(val) > (precision[key] || 0)) {\n            produced[key] = val;\n          } else {\n            // 小于精度的直接累加到value\n            if (typeof propertyValue.value[key] === 'number') {\n              propertyValue.value[key] += val;\n            }\n          }\n        }\n      });\n      const producedKeys = Object.keys(produced);\n      // 存在需要执行动画的增量(大于精度的)，进行动画处理\n      if (producedKeys.length > 0) {\n        // 存储每一帧动画后还有多少剩余没有执行\n        const remainValue = { ...produced };\n        // 创建动画，并存储到this\n        const animation = new Animation(restOptions);\n        this._animation.push({ animation, remainValue, cancel });\n        // 开启动画\n        animation.start((progress) => {\n          // 根据动画进度对value进行累加\n          producedKeys.forEach((key) => {\n            const unconsumed = produced[key] * (1 - progress);\n            if (typeof propertyValue.value[key] === 'number') {\n              propertyValue.value[key] += remainValue[key] - unconsumed;\n            }\n            remainValue[key] = unconsumed;\n          });\n          // 每帧动画后应用到元素并执行帧回调\n          element.style.setProperty(propertyName, propertyValue.toString());\n          transition(propertyValue.value);\n          if (progress === 1) {\n            // 动画结束后删除集合中的这个动画对象\n            const index = this._animation.findIndex(\n              (a) => animation === a.animation,\n            );\n            // 一般情况不出出现-1，这里强判断（防止动画出现了两次progress为1的情况）\n            if (index !== -1) {\n              this._animation.splice(index, 1);\n            }\n            resolve(propertyValue.value);\n          }\n        });\n      } else {\n        // 不存在需要执行动画的增量(小于精度的)，就直接将精度筛选时累加的值应用到元素并执行帧回调\n        element.style.setProperty(propertyName, propertyValue.toString());\n        transition(propertyValue.value);\n        resolve(propertyValue.value);\n      }\n    });\n  }\n  cancel(end: boolean = false) {\n    // end是告诉动画取消时是停留在当前还是执行到终点\n    const remainValues: TIValue[] = [];\n    this._animation = this._animation.filter(\n      ({ animation, remainValue, cancel }) => {\n        if (cancel) {\n          animation[end ? 'end' : 'stop']();\n          // 存储剩余没有执行的部分返回给调用者\n          remainValues.push(remainValue);\n          return false;\n        }\n        return true;\n      },\n    );\n    return remainValues;\n  }\n  transitioning() {\n    return this._animation.length !== 0;\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-06-14 16:40:44\n * @Description: ******\n */\n\nconst DEG_TO_RAD = Math.PI / 180;\n\nconst Matrix = {\n  // 将矩阵 lhm 与矩阵 rhm 相乘，然后保存到矩阵 rm 中\n  multiply: function multiply(\n    rm: Float32Array,\n    lhm: Float32Array,\n    rhm: Float32Array,\n  ) {\n    const a11 = lhm[0];\n    const a12 = lhm[4];\n    const a13 = lhm[8];\n    const a14 = lhm[12];\n    const a21 = lhm[1];\n    const a22 = lhm[5];\n    const a23 = lhm[9];\n    const a24 = lhm[13];\n    const a31 = lhm[2];\n    const a32 = lhm[6];\n    const a33 = lhm[10];\n    const a34 = lhm[14];\n    const a41 = lhm[3];\n    const a42 = lhm[7];\n    const a43 = lhm[11];\n    const a44 = lhm[15];\n    const b11 = rhm[0];\n    const b12 = rhm[1];\n    const b13 = rhm[2];\n    const b14 = rhm[3];\n    const b21 = rhm[4];\n    const b22 = rhm[5];\n    const b23 = rhm[6];\n    const b24 = rhm[7];\n    const b31 = rhm[8];\n    const b32 = rhm[9];\n    const b33 = rhm[10];\n    const b34 = rhm[11];\n    const b41 = rhm[12];\n    const b42 = rhm[13];\n    const b43 = rhm[14];\n    const b44 = rhm[15];\n    rm[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    rm[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    rm[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    rm[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    rm[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    rm[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    rm[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    rm[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    rm[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    rm[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    rm[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    rm[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    rm[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    rm[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    rm[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    rm[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n  },\n  // 将矩阵 m 设置为初始矩阵\n  identity: function identity(m: Float32Array) {\n    for (let i = 0; i < 16; i++) {\n      m[i] = 0;\n    }\n    for (let i = 0; i < 16; i += 5) {\n      m[i] = 1;\n    }\n  },\n  // 将矩阵 m 按照 x, y, z 平移\n  translate: function translate(\n    m: Float32Array,\n    x: number,\n    y: number,\n    z: number,\n  ) {\n    for (let i = 0; i < 4; i++) {\n      m[12 + i] += m[i] * x + m[4 + i] * y + m[8 + i] * z;\n    }\n  },\n  // 将矩阵 m 按照 x, y, z 缩放\n  scale: function scale(m: Float32Array, x: number, y: number, z: number) {\n    for (let i = 0; i < 4; i++) {\n      m[i] *= x;\n      m[4 + i] *= y;\n      m[8 + i] *= z;\n    }\n  },\n  // 将矩阵 m 围绕 x, y, z 旋转a度\n  rotate: function rotate(\n    m: Float32Array,\n    a: number,\n    x: number,\n    y: number,\n    z: number,\n  ) {\n    const rm = new Float32Array(16);\n    rm[3] = 0;\n    rm[7] = 0;\n    rm[11] = 0;\n    rm[12] = 0;\n    rm[13] = 0;\n    rm[14] = 0;\n    rm[15] = 1;\n    const ra = a * DEG_TO_RAD;\n    const s = Math.sin(ra);\n    const c = Math.cos(ra);\n    if (x === 1 && y === 0 && z === 0) {\n      // x轴\n      rm[5] = c;\n      rm[10] = c;\n      rm[6] = s;\n      rm[9] = -s;\n      rm[1] = 0;\n      rm[2] = 0;\n      rm[4] = 0;\n      rm[8] = 0;\n      rm[0] = 1;\n    } else if (x === 0 && y === 0 && z === 0) {\n      // y轴\n      rm[0] = c;\n      rm[10] = c;\n      rm[8] = s;\n      rm[2] = -s;\n      rm[1] = 0;\n      rm[4] = 0;\n      rm[6] = 0;\n      rm[9] = 0;\n      rm[5] = 1;\n    } else if (x === 0 && y === 0 && z === 1) {\n      // z轴\n      rm[0] = c;\n      rm[5] = c;\n      rm[1] = s;\n      rm[4] = -s;\n      rm[2] = 0;\n      rm[6] = 0;\n      rm[8] = 0;\n      rm[9] = 0;\n      rm[10] = 1;\n    } else {\n      const len = Math.sqrt(x * x + y * y + z * z);\n      if (len !== 1) {\n        const recipLen = 1 / len;\n        x *= recipLen;\n        y *= recipLen;\n        z *= recipLen;\n      }\n      const nc = 1 - c;\n      const xy = x * y;\n      const yz = y * z;\n      const zx = z * x;\n      const xs = x * s;\n      const ys = y * s;\n      const zs = z * s;\n      rm[0] = x * x * nc + c;\n      rm[4] = xy * nc - zs;\n      rm[8] = zx * nc + ys;\n      rm[1] = xy * nc + zs;\n      rm[5] = y * y * nc + c;\n      rm[9] = yz * nc - xs;\n      rm[2] = zx * nc - ys;\n      rm[6] = yz * nc + xs;\n      rm[10] = z * z * nc + c;\n    }\n    Matrix.multiply(m, m, rm);\n  },\n  // 将矩阵 m 按照欧拉角 xa, ya, za 旋转\n  rotateEuler: function rotateEuler(\n    m: Float32Array,\n    xa: number,\n    ya: number,\n    za: number,\n  ) {\n    const rm = new Float32Array(16);\n    const xra = xa * DEG_TO_RAD;\n    const yra = ya * DEG_TO_RAD;\n    const zra = za * DEG_TO_RAD;\n    const cx = Math.cos(xra);\n    const sx = Math.sin(xra);\n    const cy = Math.cos(yra);\n    const sy = Math.sin(yra);\n    const cz = Math.cos(zra);\n    const sz = Math.sin(zra);\n    const cxsy = cx * sy;\n    const sxsy = sx * sy;\n    rm[0] = cy * cz;\n    rm[1] = -cy * sz;\n    rm[2] = sy;\n    rm[3] = 0;\n    rm[4] = cxsy * cz + cx * sz;\n    rm[5] = -cxsy * sz + cx * cz;\n    rm[6] = -sx * cy;\n    rm[7] = 0;\n    rm[8] = -sxsy * cz + sx * sz;\n    rm[9] = sxsy * sz + sx * cz;\n    rm[10] = cx * cy;\n    rm[11] = 0;\n    rm[12] = 0;\n    rm[13] = 0;\n    rm[14] = 0;\n    rm[15] = 1;\n    Matrix.multiply(m, m, rm);\n  },\n  // 将矩阵 m 进行perspective变换\n  perspective: function perspective(\n    m: Float32Array,\n    fovy: number,\n    aspect: number,\n    zNear: number,\n    zFar: number,\n  ) {\n    const f = 1 / Math.tan(fovy * (Math.PI / 360.0));\n    const rangeReciprocal = 1 / (zNear - zFar);\n    m[0] = f / aspect;\n    m[1] = 0;\n    m[2] = 0;\n    m[3] = 0;\n    m[4] = 0;\n    m[5] = f;\n    m[6] = 0;\n    m[7] = 0;\n    m[8] = 0;\n    m[9] = 0;\n    m[10] = (zFar + zNear) * rangeReciprocal;\n    m[11] = -1;\n    m[12] = 0;\n    m[13] = 0;\n    m[14] = 2 * zFar * zNear * rangeReciprocal;\n    m[15] = 0;\n  },\n};\n\nexport default Matrix;\n","/*\n * @Author: Huangjs\n * @Date: 2023-04-27 18:24:36\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-06-14 15:12:45\n * @Description: ******\n */\n\nimport Matrix from './matrix';\n\nexport type TransformRaw = {\n  a?: number;\n  k?: number;\n  x?: number;\n  y?: number;\n};\n\nexport default class Transform {\n  a: number | undefined;\n  k: number | undefined;\n  x: number | undefined;\n  y: number | undefined;\n\n  constructor(t: TransformRaw) {\n    this.a = t.a;\n    this.k = t.k;\n    this.x = t.x;\n    this.y = t.y;\n  }\n  static identity() {\n    return new Transform({ a: 0, k: 1, x: 0, y: 0 });\n  }\n  toRaw() {\n    const raw: TransformRaw = {};\n    if (typeof this.a === 'number') {\n      raw.a = this.a;\n    }\n    if (typeof this.k === 'number') {\n      raw.k = this.k;\n    }\n    if (typeof this.x === 'number') {\n      raw.x = this.x;\n    }\n    if (typeof this.y === 'number') {\n      raw.y = this.y;\n    }\n    return raw;\n  }\n  toString() {\n    const { a = 0, k = 1, x = 0, y = 0 } = this;\n    const matrix = new Float32Array(16);\n    Matrix.identity(matrix);\n    Matrix.translate(matrix, x, y, 0);\n    Matrix.scale(matrix, k, k, k);\n    // 这里使用负值，实际matrix3d里负值为顺时针\n    Matrix.rotate(matrix, -a, 0, 0, 1);\n    return `matrix3d(${Array.prototype.slice.call(matrix).join(',')})`;\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-06-21 13:34:18\n * @Description: ******\n */\n\n// 阻尼算法逻辑\nfunction damping(value: number, friction: number, inverse: boolean = false) {\n  if (value === 0) {\n    return 0;\n  }\n  if (friction <= 0) {\n    return 1;\n  }\n  const v = value || 1;\n  let f = Math.min(1, friction);\n  f = inverse ? 1 / f : f;\n  return Math.pow(Math.abs(v), f) * (v > 0 ? 1 : -1);\n}\n// 解决0.1+0.2不等于0.3的问题\nexport function fixDecimal(value: number, places: number = 15) {\n  const multiple = Math.pow(10, places);\n  return Math.round(value * multiple) / multiple;\n}\n// 算出双击时offset的比例\nexport function ratioOffset(v: number, k: number, t: number) {\n  if (v <= (1 - k) / (2 * k)) {\n    return -1 / 2;\n  } else if (v >= (1 + k - 2 * t) / (2 * k)) {\n    return 1 / 2;\n  } else {\n    return (v - (1 - t) / (2 * k)) / (1 - t / k);\n  }\n}\n// 传入的a是函数，就返回函数执行结果，否则直接返回a\nexport function execute(fn: any, ...args: any) {\n  return typeof fn === 'function' ? fn(...args) : fn;\n}\n// 判断v是否在min和max之间\nexport function isBetween(v: number, [min, max]: number[]) {\n  return min <= v && v <= max;\n}\n// 若v在min和max之间，则返回v值，否则，返回边缘值min或max\nexport function between(v: number, [min, max]: number[], _?: boolean) {\n  return Math.max(Math.min(v, max), min);\n}\n// 跟随手指移动，旋转或缩放时的阻尼算法\nexport function performDamping(\n  v: number,\n  [min, max]: number[],\n  k: boolean = false, // 是否使用积计算（主要是缩放情况），否则使用和算法\n) {\n  if (v < min || v > max) {\n    const m = v < min ? min : max;\n    return k ? m * damping(v / m, 0.4) : m + damping(v - m, 0.8);\n  }\n  return v;\n}\n// 跟随手指移动，旋转或缩放时恢复阻尼算法的原值\nexport function revokeDamping(\n  v: number,\n  [min, max]: number[],\n  k: boolean = false, // 是否使用积计算（主要是缩放情况），否则使用和算法\n) {\n  if (v < min || v > max) {\n    const m = v < min ? min : max;\n    return k ? m * damping(v / m, 0.4, true) : m + damping(v - m, 0.8, true);\n  }\n  return v;\n}\nexport function easeOutQuad(t: number) {\n  return 1 - (1 - t) * (1 - t);\n}\nexport function easeOutQuart(t: number) {\n  return 1 - (1 - t) * (1 - t) * (1 - t) * (1 - t);\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-06-21 15:03:04\n * @Description: ******\n */\n\nimport Gesture, { type GEvent } from './gesture';\nimport Transition, { TAProperty, TAIOptions } from './transition';\nimport Transform, { type TransformRaw } from './transform';\nimport {\n  ratioOffset,\n  performDamping,\n  revokeDamping,\n  isBetween,\n  between,\n  execute,\n  easeOutQuad,\n  easeOutQuart,\n} from './adjust';\n\nfunction transition(\n  this: ImageView,\n  transformRaw: TransformRaw,\n  options: TAIOptions = {},\n) {\n  const deltaValue: TransformRaw = {};\n  const precision: TransformRaw = {};\n  const { a: ta = 0, k: tk = 1, x: tx = 0, y: ty = 0 } = this._transform;\n  const { a, k, x, y } = transformRaw;\n  if (typeof a === 'number') {\n    deltaValue.a = (this._transform.a = a) - ta;\n    // 角度精度按照屏幕尺寸一般暂时设置为0.001\n    precision.a = 0.001;\n  }\n  if (typeof k === 'number') {\n    deltaValue.k = (this._transform.k = k) - tk;\n    // 缩放精度按照屏幕尺寸一般暂时设置为0.001\n    precision.k = 0.001;\n  }\n  if (typeof x === 'number') {\n    deltaValue.x = (this._transform.x = x) - tx;\n    // 像素精度都在1px\n    precision.x = 1;\n  }\n  if (typeof y === 'number') {\n    deltaValue.y = (this._transform.y = y) - ty;\n    // 像素精度都在1px\n    precision.y = 1;\n  }\n  return this._transition\n    .apply(deltaValue, {\n      precision,\n      duration: 400,\n      easing: easeOutQuart,\n      cancel: true,\n      ...options,\n    })\n    .then((value) => {\n      if (!this._transition.transitioning()) {\n        // 在最后一个动画的最后一帧结束重新绑定一下过渡值，目的是为了让_transition里的value和_transform保持一致\n        this._transition.bind(this._transform.toRaw());\n      }\n      return value;\n    });\n}\nconst touchStart = function touchStart(this: ImageView, e: GEvent) {\n  if (e.sourceEvent.touches.length > 1) {\n    // 当单指未触发移动，接着放了另外的手指，则认为开启了双指操作，手指为2个\n    if (this._fingers === 0) {\n      this._fingers = 2;\n    }\n  }\n  const { a: ta = 0, k: tk = 1, x: tx = 0, y: ty = 0 } = this._transform;\n  this._transition.cancel().forEach((value) => {\n    // 取消动画（返回值是动画未执行的部分）后应该把this._transform内的值减掉还未执行的部分\n    Object.keys(value).forEach((key) => {\n      const val = value[key];\n      if (key === 'a') {\n        this._transform.a = ta - val;\n      } else if (key === 'k') {\n        this._transform.k = tk - val;\n      } else if (key === 'x') {\n        this._transform.x = tx - val;\n      } else if (key === 'y') {\n        this._transform.y = ty - val;\n      }\n    });\n    // 曲线救国 1：\n    // _firstPoint和_preventSingleTap是_gesture内部记录判断是否执行doubleTap的内部参数\n    // 这里注入设置，目的是使停止动画的这一次触摸忽略不参与记录判断doubleTap\n    this._gesture._firstPoint = null;\n    this._gesture._preventSingleTap = true;\n  });\n};\nconst touchMove = function touchMove(this: ImageView, e: GEvent) {\n  if (e.sourceEvent.touches.length === 1 && this._fingers === 0) {\n    // 当触发移动时，若只有一个手指在界面上，就认为一直只有一个手指，即使后面再放手指\n    this._fingers = 1;\n  }\n  if (this.transforming()) {\n    // 若存在正在进行的渐变动画，则不做任何操作\n    return;\n  }\n  const { point, angle = 0, scale = 1, deltaX = 0, deltaY = 0 } = e;\n  const { a: ta = 0, k: tk = 1, x: tx = 0, y: ty = 0 } = this._transform;\n  const { rotation, scalation, translation } = this;\n  const [translationX, translationY] = translation;\n  let transformRaw: TransformRaw = {};\n  if (this._fingers === 1) {\n    // _fingers为1的时候，只进行位移，不进行旋转和缩放，相当于单指移动\n    // 曲线救国 2：\n    // _rotateAngle是_gesture内部记录双指累计旋转角度的参数\n    // 这里拿出来是为了阻止双指移动时改变了_rotateAngle类型，仅仅是让touchEnd的时候可以取消动画\n    this._gesture._rotateAngle = null;\n    let adjustTranlate = between;\n    let _tx = tx;\n    let _ty = ty;\n    // 若允许阻尼，首先应该先把当前值反算出阻尼之前的原值\n    if (this.isDamping('translate')) {\n      _tx = revokeDamping(tx, execute(translationX, tk));\n      _ty = revokeDamping(ty, execute(translationY, tk));\n      adjustTranlate = performDamping;\n    }\n    transformRaw = {\n      a: ta,\n      k: tk,\n      x: adjustTranlate(_tx + deltaX, execute(translationX)),\n      y: adjustTranlate(_ty + deltaY, execute(translationY)),\n    };\n  } else {\n    // 若允许阻尼，首先应该先把当前值反算出阻尼之前的原值\n    let adjustRotate = between;\n    let _ta = ta;\n    if (this.isDamping('rotate')) {\n      _ta = revokeDamping(ta, execute(rotation));\n      adjustRotate = performDamping;\n    }\n    let adjustScale = between;\n    let _tk = tk;\n    if (this.isDamping('scale')) {\n      _tk = revokeDamping(tk, execute(scalation), true);\n      adjustScale = performDamping;\n    }\n    let adjustTranlate = between;\n    let _tx = tx;\n    let _ty = ty;\n    if (this.isDamping('translate')) {\n      _tx = revokeDamping(tx, execute(translationX, tk));\n      _ty = revokeDamping(ty, execute(translationY, tk));\n      adjustTranlate = performDamping;\n    }\n    // 把原值进行各项变化，再进行总体阻尼计算\n    const a = adjustRotate(_ta + angle, execute(rotation));\n    const k = adjustScale(_tk * scale, execute(scalation), true);\n    const [ox, oy] = this.getCenterOffset(point, k);\n    const x = adjustTranlate(_tx + ox + deltaX, execute(translationX, k));\n    const y = adjustTranlate(_ty + oy + deltaY, execute(translationY, k));\n    transformRaw = { a, k, x, y };\n  }\n  // 这里移动时不需要动画，可以直接进行绑定赋值\n  this._transform = new Transform(transformRaw);\n  this._transition.bind(transformRaw);\n};\nconst touchEnd = function touchEnd(this: ImageView, e: GEvent) {\n  if (e.sourceEvent.touches.length === 0 && this._fingers !== 0) {\n    // 手指全部抬起时，手指数目置为0\n    this._fingers = 0;\n  }\n  if (this.transforming()) {\n    // 若存在正在进行的渐变动画，则不做任何操作\n    return;\n  }\n  const { rotation, scalation, translation } = this;\n  const [translationX, translationY] = translation;\n  let { a: ta = 0, k: tk = 1, x: tx = 0, y: ty = 0 } = this._transform;\n  // 若允许阻尼，首先应该先把当前值反算出阻尼之前的原值\n  if (this.isDamping('rotate')) {\n    ta = revokeDamping(ta, execute(rotation));\n  }\n  if (this.isDamping('scale')) {\n    tk = revokeDamping(tk, execute(scalation), true);\n  }\n  if (this.isDamping('translate')) {\n    tx = revokeDamping(tx, execute(translationX, tk));\n    ty = revokeDamping(ty, execute(translationY, tk));\n  }\n  this.transformTo(\n    {\n      a: ta,\n      k: tk,\n      x: tx,\n      y: ty,\n    },\n    e.point,\n    {\n      // 曲线救国 3：\n      // _rotateAngle是_gesture内部记录双指累计旋转角度的参数\n      // 这里拿出来是为了判断抬起之前是否进行过双指移动行为（如果未移动或单指是null），从而判断是否可以取消动画\n      cancel: typeof this._gesture._rotateAngle !== 'number',\n    },\n  );\n};\nconst doubleTap = function doubleTap(this: ImageView, e: GEvent) {\n  if (this.transforming()) {\n    // 若存在正在进行的渐变动画，则不做任何操作\n    return;\n  }\n  const { dblScale, scalation } = this;\n  const { value, adjust } = execute(dblScale);\n  // 这三个比例都是用保留三位小数的结果进行比较\n  // 其实这里的3应该用1/屏幕的宽高算出的小数位数\n  // 此刻比例和位移\n  const tk = this._transform.k || 1;\n  // 双击变化的比例\n  const dk = between(value, execute(scalation));\n  // 再次双击恢复的比例（初始比例）\n  const bk = between(1, execute(scalation));\n  // 双击变化（如果设置的双击比例大于初始比例并且此刻比例小于或等于初始比例\n  // 或者设置的双击比例小于初始比例且此刻比例大于或等于初始比例）\n  if ((dk > bk && tk <= bk) || (dk < bk && tk >= bk)) {\n    if (adjust) {\n      // 需要调整的情况，自己算偏移量，并且旋转置为0\n      const [ox, oy] = this.getCenterOffset(e.point, dk, adjust);\n      const { x: tx = 0, y: ty = 0 } = this._transform;\n      this.transformTo({ a: 0, k: dk, x: tx + ox, y: ty + oy });\n    } else {\n      // 交给transformTo\n      this.transformTo({ k: dk }, e.point);\n    }\n  } else {\n    // 再次双击恢复\n    if (adjust) {\n      // 需要调整的情况，置为初始状态\n      this.transformTo({ a: 0, k: bk, x: 0, y: 0 });\n    } else {\n      // 交给transformTo\n      this.transformTo({ k: bk }, e.point);\n    }\n  }\n};\nconst swipe = function swipe(this: ImageView, e: GEvent) {\n  if (this.transforming()) {\n    // 若存在正在进行的渐变动画，则不做任何操作\n    return;\n  }\n  const { velocity = 0, swipeComputed } = e;\n  if (velocity > 0 && swipeComputed) {\n    const { width, height } = this.getContainerSize();\n    const { k: tk = 1, x: tx = 0, y: ty = 0 } = this._transform;\n    // 设置减速度为 0.003，获取当速度减为 0 时的滑动距离和时间\n    // 减速度为 0.003，这个需要测微信\n    const { duration, stretchX, stretchY } = swipeComputed(\n      0.003,\n      velocity > 3 ? 2 + Math.pow(velocity - 2, 1 / 3) : velocity, // 对速度进行一个限制\n    );\n    const _duration = Math.max(1200, Math.min(duration, 2500));\n    // 判断x方向此刻是否超出边界，如果超出，直接归位，未超出，则惯性位移\n    const translationX = execute(this.translation[0], tk);\n    if (isBetween(tx, translationX)) {\n      let x = tx + stretchX;\n      let t = _duration;\n      if (!isBetween(x, translationX)) {\n        x = between(x, translationX);\n        let ratio = Math.sqrt(1 - Math.abs((x - tx) / stretchX));\n        if (this.isDamping('translate')) {\n          const v = ratio * ((2 * Math.abs(stretchX)) / duration);\n          x += width * Math.min(v / 20, 1 / 4) * (stretchX > 0 ? 1 : -1);\n          ratio = Math.sqrt(1 - Math.abs((x - tx) / stretchX));\n        }\n        t = Math.max(t * (1 - ratio), 400);\n      }\n      // x方向进行惯性位移\n      transition\n        .apply(this, [{ x }, { easing: easeOutQuad, duration: t }])\n        .then(() => {\n          // 惯性位移后超出边界，则归位\n          if (!isBetween(x, translationX)) {\n            transition.apply(this, [{ x: between(x, translationX) }]);\n          }\n        });\n    } else {\n      // 直接归位\n      transition.apply(this, [{ x: between(tx, translationX) }]);\n    }\n    // 判断y方向此刻是否超出边界，如果超出，直接归位，未超出，则惯性位移\n    const translationY = execute(this.translation[1], tk);\n    if (isBetween(ty, translationY)) {\n      let y = ty + stretchY;\n      let t = _duration;\n      if (!isBetween(y, translationY)) {\n        y = between(y, translationY);\n        let ratio = Math.sqrt(1 - Math.abs((y - ty) / stretchY));\n        if (this.isDamping('translate')) {\n          const v = ratio * ((2 * Math.abs(stretchY)) / duration);\n          y += height * Math.min(v / 20, 1 / 4) * (stretchY > 0 ? 1 : -1);\n          ratio = Math.sqrt(1 - Math.abs((y - ty) / stretchY));\n        }\n        t = Math.max(t * (1 - ratio), 400);\n      }\n      // y方向进行惯性位移\n      transition\n        .apply(this, [{ y }, { easing: easeOutQuad, duration: t }])\n        .then(() => {\n          // 惯性位移后超出边界，则归位\n          if (!isBetween(y, translationY)) {\n            transition.apply(this, [{ y: between(y, translationY) }]);\n          }\n        });\n    } else {\n      // 直接归位\n      transition.apply(this, [{ y: between(ty, translationY) }]);\n    }\n  }\n};\n\nclass ImageView {\n  container: HTMLElement;\n  element: HTMLElement;\n  damping: Damping[] = []; // 可以进行阻尼的变换\n  dblScale: DblScale | (() => DblScale) = {}; // 双击放大比例和是否调整放大时的中心点\n  rotation: number[] | (() => number[]) = []; // 旋转范围\n  scalation: number[] | (() => number[]) = []; // 缩放范围\n  translation: (number[] | (() => number[]))[] = []; // 平移范围\n  _fingers: number = 0; // 当单指放上去移动之后，再放手指移动，不会出现双指缩放旋转，会连续移动（一种感觉效果而已）\n  _gesture: Gesture; // 手势对象\n  _transform: Transform; // 当前手势操作之后的变换对象\n  _transition: Transition; // 当前渐变对象\n  constructor({\n    container,\n    element,\n    damping,\n    dblScale,\n    rotation,\n    scalation,\n    translation,\n  }: IOption) {\n    this.container = container;\n    this.element = element;\n    this.setDamping(damping); // 设置[]，则全都不阻尼\n    this.setDblScale(dblScale); // 设置1，则不进行双击缩放，但可双击归位\n    this.setRotation(rotation); // 设置相同数字（比如0），则不允许旋转，该数字为初始旋转\n    this.setScalation(scalation); // 设置相同数字（比如1），则不允许缩放，该数为初始缩放\n    this.setTranslation(translation); // 设置相同数字（比如0），则不允许平移，该数为初始位置\n    const a = between(0, execute(this.rotation)); // 初始角度a\n    const k = between(1, execute(this.scalation)); // 初始比例k\n    const x = between(0, execute(this.translation[0], k)); // 初始位移x\n    const y = between(0, execute(this.translation[1], k)); //初始位移y\n    this._transform = new Transform({ a, k, x, y });\n    // 创建过渡\n    this._transition = new Transition({\n      element: this.element,\n      propertyName: 'transform',\n      propertyValue: new (class extends TAProperty {\n        toString() {\n          // 这里注意，在不存在任何过渡动画的时候，这里的this.value应该和上面的this._transform内的每项值应该是相等的\n          // 但是由于 0.1+0.2!==0.3 的问题，导致经过各种计算后，其值并不是完全相等，存在极小的精度问题\n          return new Transform(this.value).toString();\n        }\n      })(this._transform.toRaw()),\n    });\n    // 绑定手势\n    const gesture = new Gesture(this.container);\n    if (gesture.done()) {\n      gesture.on('touchStart', touchStart.bind(this));\n      gesture.on('touchMove', touchMove.bind(this));\n      gesture.on('doubleTap', doubleTap.bind(this));\n      gesture.on('swipe', swipe.bind(this));\n      gesture.on('touchEnd', touchEnd.bind(this));\n    }\n    this._gesture = gesture;\n  }\n  destory() {\n    // 销毁手势事件\n    this._gesture.destory();\n  }\n  isDamping(key: Damping) {\n    return this.damping && this.damping.indexOf(key) !== -1;\n  }\n  setDamping(damping?: Damping[]) {\n    if (damping) {\n      this.damping = damping;\n      return;\n    }\n    this.damping = ['scale', 'translate']; // 如果不设置，默认只对缩放比例和位移进行阻尼\n  }\n  setDblScale(k?: DblScale | number) {\n    // 如果直接传入数字，那么adjust为false，value为传入的数字\n    if (typeof k === 'number' && k > 0) {\n      this.dblScale = {\n        adjust: false,\n        value: +k,\n      };\n      return;\n    }\n    let adjust = true;\n    if (k && typeof k !== 'number') {\n      // 如果传入对象，且value是数字，那么adjust为传入的!!adjust，value为传入的value\n      if (typeof k.value === 'number' && k.value > 0) {\n        this.dblScale = {\n          adjust: !!k.adjust,\n          value: k.value,\n        };\n        return;\n      }\n      // 如果传入对象，且value不是数字，那么adjust只有传入false才是false，其它都是true\n      adjust = k.adjust !== false;\n    }\n    // 如果传入的不是数字也不是对象，或者传入对象，但是对象里的value不是数字，那么value取下面的计算\n    // adjust取上面的adjust（即除非对象里adjust确切传入了false，否则都默认为true）\n    // 测微信得到的结论，双击放大比例是\n    // 1，元素宽与容器宽之比，元素高与容器高之比的最大值\n    // 2，元素实际宽与元素宽之比，元素实际高与元素高之比的最小值\n    // 3，在1、2两个值和数值2这三个之中的最大值\n    this.dblScale = () => {\n      const { width: cw, height: ch } = this.getContainerSize();\n      const { width: ew, height: eh } = this.getElClientSize();\n      const { width: nw, height: nh } = this.getElNaturalSize();\n      return {\n        adjust,\n        value: Math.max(\n          2,\n          Math.max(cw / ew, ch / eh),\n          Math.min(nw / cw, nh / ch),\n        ),\n      };\n    };\n  }\n  setRotation(a?: number[]) {\n    if (\n      a &&\n      typeof a[0] === 'number' &&\n      typeof a[1] === 'number' &&\n      a[1] >= a[0]\n    ) {\n      this.rotation = a; // 最大范围 -Infinity 到 + Infinity\n      return;\n    }\n    // 测微信得到的结论，是不给旋转的\n    this.rotation = () => [0, 0]; // 如果设置不合理，则取默认\n  }\n  setScalation(k?: number[]) {\n    if (\n      k &&\n      typeof k[0] === 'number' &&\n      typeof k[1] === 'number' &&\n      k[1] >= k[0] &&\n      k[0] > 0\n    ) {\n      this.scalation = k; // 最大范围 0 到 +Infinity (不等于0)\n      return;\n    }\n    // 测微信得到的结论，最小值为1，最大值永远是双击值放大值的2倍\n    this.scalation = () => [1, 2 * execute(this.dblScale).value]; // 如果设置不合理，则取默认\n  }\n  setTranslation(xy?: number[][]) {\n    this.setXTranslation(xy && xy[0]);\n    this.setYTranslation(xy && xy[1]);\n  }\n  setXTranslation(x?: number[]) {\n    if (\n      x &&\n      typeof x[0] === 'number' &&\n      typeof x[1] === 'number' &&\n      x[1] >= x[0]\n    ) {\n      this.translation[0] = x; // 最大范围 -Infinity 到 + Infinity\n      return;\n    }\n    // 测微信得到的结论，边界范围是元素按照当前比例缩放后宽度和容器宽度之差，左右各一半的范围\n    this.translation[0] = (k: number = this._transform.k || 1) => {\n      const { width: cw } = this.getContainerSize();\n      const { width: ew } = this.getElClientSize();\n      const bx = Math.max((ew * k - cw) / 2, 0);\n      return [-bx, bx];\n    };\n  }\n  setYTranslation(y?: number[]) {\n    if (\n      y &&\n      typeof y[0] === 'number' &&\n      typeof y[1] === 'number' &&\n      y[1] >= y[0]\n    ) {\n      this.translation[1] = y; // 最大范围 -Infinity 到 +Infinity\n      return;\n    }\n    // 测微信得到的结论，边界范围是元素按照当前比例缩放后高度和容器高度之差，上下各一半的范围\n    this.translation[1] = (k: number = this._transform.k || 1) => {\n      const { height: ch } = this.getContainerSize();\n      const { height: eh } = this.getElClientSize();\n      const by = Math.max((eh * k - ch) / 2, 0);\n      return [-by, by];\n    };\n  }\n  getElClientSize() {\n    // 获取目标元素初始化设置的宽高（不是进行缩放后的宽高，也不是原始宽高）\n    const { clientWidth, clientHeight } = this.element;\n    return { width: clientWidth, height: clientHeight };\n  }\n  getElNaturalSize() {\n    // 获取目标元素的实际原始宽高（一般是img元素才有的）\n    let { element } = this;\n    if ('naturalWidth' in element && 'naturalHeight' in element) {\n      return {\n        width: (element as HTMLImageElement).naturalWidth,\n        height: (element as HTMLImageElement).naturalHeight,\n      };\n    }\n    return this.getElClientSize();\n  }\n  getContainerSize() {\n    // 获取容器元素的原始宽高\n    const { clientWidth, clientHeight } = this.container;\n    return { width: clientWidth, height: clientHeight };\n  }\n  getContainerCenter() {\n    // 获取容器中心点位置\n    const { left, top, width, height } = this.container.getBoundingClientRect();\n    return [left + width / 2, top + height / 2];\n  }\n  getCenterOffset(point: number[], k: number, adjust: boolean = false) {\n    const { k: tk = 1, x: tx = 0, y: ty = 0 } = this._transform;\n    const dk = k / tk;\n    const [cx, cy] = this.getContainerCenter();\n    let ox = point[0] - (cx + tx);\n    let oy = point[1] - (cy + ty);\n    if (adjust) {\n      // 思路：对元素进行划线分界\n      // 1，在元素上边的时候，用元素实际高度一半(eh/2)的基础上在除以双击比例 k 即 eh/2k 作为上分界线，分界线到元素上边缘区域内点击，全部视为在元素上边缘线上点击，即放大后元素上边缘会紧贴在容器上边缘\n      // 2，在元素下边的时候，先用容器的高(ch)比上元素实际高(eh)，即ch/eh（但是这个比例值只能在1和2之间（即只针对元素高小于容器高且大于容器高一半的情况）），用这个比例减去1/2k，得到的结果乘以元素实际高(eh)，再以此作为下分界线，分界线到元素下边缘区域内点击，全部视为在元素下边缘线上点击，即放大后元素下边缘会紧贴在容器下边缘\n      // 3，找出元素在不受偏移量和边界限制的影响下，点击元素中心点放大后，元素上下各存在一条界线正好与容器边缘重合，计算出该界线到中心点的距离，该距离一定是在元素中心点到元素边缘之间即0,ew/2之间，并且两条界线等距\n      // 4，在1，2中算出的上下分界线之间内点击，计算均匀分布对应到在3中算出的上下界线之间内点击，分界线中点处对应元素中点处，最后得到对应的偏移量oy\n      // 5，元素左右计算方式如同上下方式一样得到ox\n      // 测微信得到的结论\n      // 这个偏移量需要要向着边缘点发散\n      const { width: cw, height: ch } = this.getContainerSize();\n      const { width, height } = this.getElClientSize();\n      const ew = width / tk;\n      const eh = height / tk;\n      ox =\n        between(ew - (cw - ew) / (dk - 1), [0, ew]) *\n        ratioOffset(ox / ew, dk, between(cw / ew, [1, 2]));\n      oy =\n        between(eh - (ch - eh) / (dk - 1), [0, eh]) *\n        ratioOffset(oy / eh, dk, between(ch / eh, [1, 2]));\n    }\n    ox *= 1 - dk;\n    oy *= 1 - dk;\n    return [ox, oy];\n  }\n  // 负数顺时针，正数逆时针\n  rotate(a: number) {\n    // 在原来的基础上再旋转 a\n    return this.transform({ a });\n  }\n  // 负数顺时针，正数逆时针\n  rotateTo(a: number) {\n    // 直接旋转到 a\n    return this.transformTo({ a });\n  }\n  scale(k: number, point?: number[]) {\n    // 在原来的基础上相对 point 点缩放 k\n    return this.transform({ k }, point);\n  }\n  scaleTo(k: number, point?: number[]) {\n    // 直接相对 point 点缩放到 k\n    return this.transformTo({ k }, point);\n  }\n  translate(x: number, y: number) {\n    // 在原来的基础上平移 x, y\n    return this.transform({ x, y });\n  }\n  translateTo(x: number, y: number) {\n    // 直接平移到 x, y\n    return this.transformTo({ x, y });\n  }\n  translateX(x: number) {\n    // 在原来的基础上横向平移 x\n    return this.transform({ x });\n  }\n  translateXTo(x: number) {\n    // 直接横向平移到 x\n    return this.transformTo({ x });\n  }\n  translateY(y: number) {\n    // 在原来的基础上竖向平移  y\n    return this.transform({ y });\n  }\n  translateYTo(y: number) {\n    // 直接竖向平移到 y\n    return this.transformTo({ y });\n  }\n  transform(\n    transformRaw: TransformRaw,\n    point?: number[] | TAIOptions,\n    options?: TAIOptions,\n  ) {\n    const { a: ta = 0, k: tk = 1, x: tx = 0, y: ty = 0 } = this._transform;\n    let { a, k, x, y } = transformRaw;\n    if (typeof a === 'number') {\n      a += ta;\n    }\n    if (typeof k === 'number') {\n      k *= tk;\n    }\n    if (typeof x === 'number') {\n      x += tx;\n    }\n    if (typeof y === 'number') {\n      y += ty;\n    }\n    return this.transformTo({ a, k, x, y }, point, options);\n  }\n  transformTo(\n    transformRaw: TransformRaw,\n    point?: number[] | TAIOptions,\n    options?: TAIOptions,\n  ) {\n    let _point = point;\n    let _options = options;\n    if (!options && !Array.isArray(point)) {\n      _options = point;\n      _point = undefined;\n    }\n    const { rotation, scalation, translation } = this;\n    const [translationX, translationY] = translation;\n    const { a: _a, k: _k, x: _x, y: _y } = transformRaw;\n    const _transformRaw: TransformRaw = {};\n    if (typeof _a === 'number') {\n      _transformRaw.a = between(_a, execute(rotation));\n    }\n    if (typeof _k === 'number') {\n      const k = (_transformRaw.k = between(_k, execute(scalation)));\n      if (Array.isArray(_point)) {\n        const [ox, oy] = this.getCenterOffset(_point, k);\n        const { x: tx = 0, y: ty = 0 } = this._transform;\n        _transformRaw.x = between(\n          (typeof _x === 'number' ? _x : tx) + ox,\n          execute(translationX, k),\n        );\n        _transformRaw.y = between(\n          (typeof _y === 'number' ? _y : ty) + oy,\n          execute(translationY, k),\n        );\n      } else {\n        if (typeof _x === 'number') {\n          _transformRaw.x = between(_x, execute(translationX, k));\n        }\n        if (typeof _y === 'number') {\n          _transformRaw.y = between(_y, execute(translationY, k));\n        }\n      }\n    } else {\n      if (typeof _x === 'number') {\n        _transformRaw.x = between(_x, execute(translationX));\n      }\n      if (typeof _y === 'number') {\n        _transformRaw.y = between(_y, execute(translationY));\n      }\n    }\n    return transition.apply(this, [\n      _transformRaw,\n      {\n        cancel: false,\n        ...(_options || {}),\n      },\n    ]);\n  }\n  transforming() {\n    return this._transition.transitioning();\n  }\n}\n\nexport type Damping = 'rotate' | 'scale' | 'translate';\nexport type DblScale = { adjust?: boolean; value?: number };\nexport type IOption = {\n  container: HTMLElement;\n  element: HTMLElement;\n  dblScale?: number | DblScale; // 双击放大比例\n  damping?: Damping[]; // 哪些操作超出边界可以进行阻尼效果，如果对rotate,scale,translate设置了无边界限制(Infinity)，则阻尼无效\n  scalation?: number[]; // 缩放范围 [0.1, 10]，最小比例0.1和最大比例10\n  translation?: number[][]; // 平移范围 [[-10, 20], [-20, 10]]，x最小-10，最大20，y最小-20，最大10\n  rotation?: number[]; // 旋转范围 [-10, 20]，逆时针可旋转20度和顺时针可旋转10度\n};\n\nexport default ImageView;\n"],"names":["fixOption","value","defaultValue","minVal","getDistance","x0","y0","x1","y1","Math","sqrt","pow","getAngle","atan2","PI","getCenter","ok0","ok1","getDirection","x","y","abs","isCurrentTarget","target","currentTarget","_target","parentNode","touchstarted","event","touches","preventDefault","stopImmediatePropagation","newEvent","this","element","sourceEvent","timestamp","Date","now","point","stopPropagation","Array","prototype","filter","call","t","changedTouches","length","_touch0","_touch1","i","len","p","pageX","pageY","touch","identifier","_preventTap","_preventSingleTap","_preventDoubleTap","_swipePoints","_rotateAngle","_longTapTimer","clearTimeout","trigger","window","setTimeout","waitTime","longTapInterval","_singleTapTimer","_firstPoint","doubleTapDistance","touchmoved","touchMoveDistance","eCenter","mCenter","sCenter","direction","moveDirection","deltaX","moveX","deltaY","moveY","eDistance","mDistance","sDistance","scale","moveScale","angle","moveAngle","_timestamp","swipeDuration","push","touchended","deltaTime","distance","touch0","touch1","delayTime","doubleTapInterval","intervalTime","prev","next","endPos","raiseDuration","startPos","velocity","swipeVelocity","swipeComputed","factor","_velocity","duration","deceleration","rad","cos","sin","getVector","stretchX","stretchY","touchcanceled","apply","scrollcanceled","options","tempElement","document","querySelector","HTMLElement","Error","ele","navigator","maxTouchPoints","started","bind","moved","ended","canceled","addEventListener","scrolled","_destory","removeEventListener","events","type","handler","single","onceHandler","args","off","on","pool","unregistered","splice","last","requestAnimationFrame","fn","delay","max","cancelAnimationFrame","id","callDelay","callback","Animation","easing","v","frameFn","_frameId","_elapsed","tick","_tick","elapsed","stop","time","_sleepId","restart","TAProperty","Transition","propertyName","propertyValue","replace","toLowerCase","style","setProperty","toString","newValue","Object","keys","forEach","key","val","deltaValue","Promise","resolve","precision","transition","cancel","restOptions","produced","producedKeys","remainValue","animation","_animation","start","progress","unconsumed","index","findIndex","a","end","remainValues","DEG_TO_RAD","Matrix","multiply","rm","lhm","rhm","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","identity","m","translate","z","rotate","Float32Array","ra","s","c","recipLen","nc","xy","yz","zx","xs","ys","zs","rotateEuler","xa","ya","za","xra","yra","zra","cx","sx","cy","sy","cz","sz","cxsy","sxsy","perspective","fovy","aspect","zNear","zFar","f","tan","rangeReciprocal","Transform","k","raw","matrix","slice","join","damping","friction","inverse","min","ratioOffset","execute","isBetween","between","_","performDamping","revokeDamping","easeOutQuad","easeOutQuart","transformRaw","_transform","ta","tk","tx","ty","_transition","then","transitioning","toRaw","touchStart","e","_fingers","_gesture","touchMove","transforming","rotation","scalation","translation","translationX","translationY","adjustTranlate","_tx","_ty","isDamping","adjustRotate","_ta","adjustScale","_tk","getCenterOffset","ox","oy","touchEnd","transformTo","doubleTap","dblScale","adjust","dk","bk","swipe","getContainerSize","width","height","_duration","ratio","ImageView","container","setDamping","setDblScale","setRotation","setScalation","setTranslation","gesture","Gesture","done","destory","indexOf","cw","ch","getElClientSize","ew","eh","getElNaturalSize","nw","nh","setXTranslation","setYTranslation","bx","by","clientWidth","clientHeight","naturalWidth","naturalHeight","getBoundingClientRect","left","top","getContainerCenter","transform","_point","_options","isArray","undefined","_a","_k","_x","_y","_transformRaw"],"sourceRoot":""}